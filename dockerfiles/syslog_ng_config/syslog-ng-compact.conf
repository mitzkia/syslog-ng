@version: 3.9
@module mod-java
@include "scl.conf"


source s_file {file("/tmp/input");};
destination d_file {file("/tmp/output");};

source s_pipe {pipe("/tmp/input_pipe");};
destination d_pipe {pipe("/tmp/output_pipe");};

destination d_amqp { amqp(username("test") password("test")); };
destination d_mongo { mongodb(); };
destination d_smtp { smtp(from("aaa@aaa.com") to("bbb@bbb.com") subject("test") body("test")); };
destination d_redis {redis();};
destination d_stomp {stomp();};

#SQL_BASED
destination d_mysql { sql(type(mysql) columns("datetime varchar(16)") values("${R_DATE}") ); };
destination d_postgres { sql(type(pgsql) columns("datetime varchar(16)") values("${R_DATE}") ); };
destination d_oracle { sql(type(oracle) columns("datetime varchar(16)") values("${R_DATE}") ); };
destination d_mssql { sql(type(mssql) columns("datetime varchar(16)") values("${R_DATE}") ); };

#PYTHON_BASED
destination d_python {python(class("sngexample.DummyPythonDest"));};

#JAVA_BASED
destination d_java { java(class-path("/install/lib/syslog-ng/java-modules/*.jar") class-name("org.syslog_ng.http.HTTPDestination") option("template", "$MSG") option("url", "http://aaa.aaa:1111")  ); };
destination d_http {http();};
destination d_elasticsearch {elasticsearch( client_lib_dir(/downloaded_java_based_packages/elasticsearch-1.7.5/lib/) index("syslog-ng_${YEAR}.${MONTH}.${DAY}") type("test") cluster("syslog-ng"));};
#destination d_elasticsearch2 {elasticsearch2( client_lib_dir(/downloaded_java_based_packages/elasticsearch-2.3.3/lib/) index("syslog-ng_${YEAR}.${MONTH}.${DAY}") type("test") cluster("syslog-ng"));};
#destination d_kafka {kafka(client_lib_dir("/downloaded_java_based_packages/kafka-2.3.3/lib/") topic("test"));};
destination d_hdfs {hdfs( client_lib_dir("/downloaded_java_based_packages/hdfs-2.7.2/lib/") hdfs_uri("maprfs://127.0.0.1") hdfs_file("aaaa"));};

log{
	source(s_file);
	destination(d_file);
	source(s_pipe);
	destination(d_pipe);

	destination(d_amqp);
	destination(d_mongo);
	destination(d_smtp);
	destination(d_redis);
	destination(d_stomp);

	#SQL_BASED
	destination(d_mysql);
	destination(d_postgres);
	destination(d_oracle);
	destination(d_mssql);

	#PYTHON_BASED
	destination(d_python);

	#JAVA_BASED
	destination(d_java);
	destination(d_http);
	destination(d_elasticsearch);
	#destination(d_elasticsearch2);
	#destination(d_kafka);
	destination(d_hdfs);


	flags(flow-control);
};

#python{};